apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: single-wf-template
spec:
  entrypoint: single-wf
  arguments:
    parameters:
    - {name: input-payload, value: "[]"}
    - {name: cm-name, value: example-parameters}
  
  artifactRepositoryRef:
    configMap: example-artifacts
    key: example-s3
 
  templates:
  - name: single-wf
    dag:
      tasks:
      - name: greetings
        templateRef:
          name: container-templates
          template: greet
        arguments:
          parameters:
          - name: key-prefix
            valueFrom:
              configMapKeyRef:
                name: "{{workflow.inputs.parameters.cm-name}}"
                key: key-prefix
          - {name: greeting, value: hello}
          - {name: names, value: "{{item}}"}
        withParam: "{{workflow.inputs.parameters.input-payload}}"

      - name: goodbyes
        depends: greetings
        templateRef:
          name: container-templates
          template: replace-text
        arguments:
          parameters:
          - name: key-prefix
            valueFrom:
              configMapKeyRef:
                name: "{{workflow.inputs.parameters.cm-name}}"
                key: key-prefix
          - {name: search, value: hello}
          - {name: replace, value: goodbye}
          - {name: input-key, value: "{{item}}"}
        withParam: "{{tasks.greetings.outputs.parameters.key}}"

      - name: count-hellos
        depends: greetings
        templateRef:
          name: container-templates
          template: count
        arguments:
          parameters:
          - {name: string, value: hello}
          - {name: input-key, value: "{{item}}"}
        withParam: "{{tasks.greetings.outputs.parameters.key}}"

      - name: count-goodbyes
        depends: goodbyes
        templateRef:
          name: container-templates
          template: count
        arguments:
          parameters:
          - {name: string, value: goodbye}
          - {name: input-key, value: "{{item}}"}
        withParam: "{{tasks.goodbyes.outputs.parameters.key}}"

      - name: sum-hellos
        depends: count-hellos
        templateRef:
          name: script-templates
          template: sum
        arguments:
          parameters:
          - {name: numbers, value: "{{tasks.count-hellos.outputs.parameters.number}}"}

      - name: sum-goodbyes
        depends: count-goodbyes
        templateRef:
          name: script-templates
          template: sum
        arguments:
          parameters:
          - {name: numbers, value: "{{tasks.count-goodbyes.outputs.parameters.number}}"}

      - name: write-result
        depends: "sum-hellos && sum-goodbyes"
        templateRef:
          name: script-templates
          template: write-to-db
        arguments:
          parameters:
          - name: table-name
            valueFrom:
              configMapKeyRef:
                name: "{{workflow.inputs.parameters.cm-name}}"
                key: table-name
          - name: db-connection-secret}
            valueFrom:
              configMapKeyRef:
                name: "{{workflow.inputs.parameters.cm-name}}"
                key: db-connection-secret
          - {name: sum-hello, value: "{{tasks.sum-hellos.outputs.result}}"}
          - {name: sum-goodbye, value: "{{tasks.sum-goodbyes.outputs.result}}"}
